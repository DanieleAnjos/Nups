<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gráficos</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    /* Reset de estilos */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    h1 {
      font-size: 32px;
      margin-bottom: 20px;
      color: #007bff;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f0f4f8;
      color: #333;
      line-height: 1.6;
    }

    /* Barra de navegação */
    nav {
      background-color: #007bff;
      color: white;
      padding: 15px 0;
      text-align: center;
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 1000;
    }

    nav h1 {
      font-size: 24px;
      margin: 0;
      font-weight: 500;
    }

    /* Container principal */
    .container {
      max-width: 1200px;
      margin: 80px auto 20px; /* Ajuste para a barra fixa */
      padding: 30px;
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      display: flex; /* Flexbox para alinhar os gráficos lado a lado */
      justify-content: space-between; /* Espaçamento entre os gráficos */
      flex-wrap: wrap; /* Responsividade: permite que os gráficos empilhem em telas menores */
    }

    .grafico {
      width: 48%; /* Tamanho dos gráficos lado a lado */
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }

    h2 {
      font-size: 1.5em;
      color: #495057;
      margin-bottom: 10px;
    }

    h3 {
      font-size: 1.2em;
      color: #6c757d;
      margin-bottom: 20px;
    }

    canvas {
      width: 100%; /* A largura dos gráficos será 100% do contêiner */
      height: 300px; /* Altura fixa para os gráficos */
      border-radius: 8px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

  </style>
</head>
<body>

    <h1>Gráficos Operacionais</h1>

  <div class="container">
    <!-- Gráfico de Pacientes -->
    <div class="grafico">
      <h2>Servidores Cadastrados por Período</h2>
      <h3>Total de Servidores: {{totalPacientes}}</h3>
      <canvas id="graficoPacientes"></canvas>
    </div>

    <!-- Gráfico de Encaminhamentos -->
    <div class="grafico">
      <h2>Encaminhamentos Realizados por Período</h2>
      <h3>Total de Encaminhamentos: {{totalEncaminhamentos}}</h3>
      <canvas id="graficoEncaminhamentos"></canvas>
    </div>
  </div>

  <script>
    // Dados dos Pacientes
    const pacientesLabels = JSON.parse('{{{pacientesLabels}}}');
    const pacientesData = JSON.parse('{{{pacientesData}}}');

    // Criar o gráfico de pacientes
    const ctxPacientes = document.getElementById('graficoPacientes').getContext('2d');
    new Chart(ctxPacientes, {
      type: 'bar',
      data: {
        labels: pacientesLabels,
        datasets: [{
          label: 'Servidores Cadastrados',
          data: pacientesData,
          backgroundColor: 'rgba(75, 192, 192, 0.6)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1,
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Quantidade de Pacientes'
            }
          },
          x: {
            title: {
              display: true,
              text: 'Mês/Ano'
            }
          }
        }
      }
    });

    // Dados dos Encaminhamentos
    const encaminhamentosLabels = JSON.parse('{{{encaminhamentosLabels}}}');
    const encaminhamentosData = JSON.parse('{{{encaminhamentosData}}}');

    // Criar o gráfico de encaminhamentos
    const ctxEncaminhamentos = document.getElementById('graficoEncaminhamentos').getContext('2d');
    new Chart(ctxEncaminhamentos, {
      type: 'line',
      data: {
        labels: encaminhamentosLabels,
        datasets: [{
          label: 'Encaminhamentos Realizados',
          data: encaminhamentosData,
          backgroundColor: 'rgba(153, 102, 255, 0.6)',
          borderColor: 'rgba(153, 102, 255, 1)',
          borderWidth: 1,
          fill: true,
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Quantidade de Encaminhamentos'
            }
          },
          x: {
            title: {
              display: true,
              text: 'Mês/Ano'
            }
          }
        }
      }
    });
  </script>

</body>
</html>
