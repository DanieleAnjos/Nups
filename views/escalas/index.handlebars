
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Escalas</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.0/dist/fullcalendar.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.0/dist/fullcalendar.min.js"></script>
    <link rel="stylesheet" href="/CSS/Principal.css">
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center text-primary my-4">Lista de Escalas</h2>
        {{#if (or (eq profissional.cargo "Administrador") (eq profissional.cargo "Adm"))}}
        <div class="d-flex justify-content-end mb-3">
            <a href="/escalas/create" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Adicionar Escala
            </a>
        </div>
        {{/if}}

        <form action="/escalas" method="GET" class="mb-4 p-3 border rounded shadow-sm bg-light">
            <div class="row">
                <div class="col-md-2 mb-2">
                    <input type="date" name="dataInicio" value="{{query.dataInicio}}" class="form-control" placeholder="Data Início">
                </div>
                <div class="col-md-2 mb-2">
                    <input type="date" name="dataFim" value="{{query.dataFim}}" class="form-control" placeholder="Data Fim">
                </div>
                <div class="col-md-4 mb-2">
                    <select name="profissional" class="form-control">
                        <option value="">Selecione um Profissional</option>
                        {{#each profissionais}}
                            <option value="{{this.id}}" {{#if (eq this.id ../query.profissional)}}selected{{/if}}>{{this.nome}}</option>
                        {{/each}}
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-filter"></i> Filtrar
                    </button>
                </div>
            </div>
        </form>

        {{#if errorMessage}}
            <div class="alert alert-danger mt-3" role="alert">{{errorMessage}}</div>
        {{/if}}

        <div class="table-responsive mt-3">
            <table class="table table-hover table-striped table-bordered">
                <thead class="table-primary">
                    <tr class="text-center">
                        <th>Data</th>
                        <th>Horário Início</th>
                        <th>Horário Fim</th>
                        <th>Profissional</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each escalas}}
                        <tr>
                            <td>{{Data this.data}}</td>
                            <td>{{this.horarioInicio}}</td>
                            <td>{{this.horarioFim}}</td>
                            <td>{{this.admin.nome}}</td>

                            {{#if (eq ../profissional.cargo "Administrador")}}
                                <td class="text-center">
                                    <a href="/escalas/{{this.id}}/edit" class="btn btn-warning btn-sm mx-1">
                                        <i class="bi bi-pencil-square"></i> Editar
                                    </a>
                                    <form action="/escalas/{{this.id}}?_method=DELETE" method="POST" style="display:inline;">
                                        <button type="submit" class="btn btn-danger btn-sm mx-1" onclick="return confirm('Tem certeza que deseja deletar esta escala?');">
                                            <i class="bi bi-trash"></i> Excluir
                                        </button>
                                    </form>
                                </td>
                            {{/if}}
                        </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-end mb-3">
            <button id="toggleCalendar" class="btn btn-secondary">
                <i class="bi bi-calendar-event"></i> Mostrar/Ocultar Calendário
            </button>
        </div>

        <div id="calendar" class="mt-5" style="display: none;"></div>

        {{#if (eq escalas.length 0)}}
            <div class="alert alert-info text-center" role="alert">
                Nenhuma escala encontrada.
            </div>
        {{/if}}
    </div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const calendarEl = document.getElementById('calendar');
        const toggleCalendarBtn = document.getElementById('toggleCalendar');

        if (!calendarEl) {
            console.error("Elemento de calendário não encontrado!");
            return;
        }

        // Cores personalizadas para cada profissional
        const profissionalColors = JSON.parse('{{{profissionalColors}}}');

        const events = [
            {{#each escalas}}
            {
                title: '{{this.admin.nome}} - {{this.horarioInicio}} até {{this.horarioFim}}',
                start: '{{this.data}}T{{this.horarioInicio}}',
                end: '{{this.data}}T{{this.horarioFim}}',
                backgroundColor: profissionalColors['{{this.admin.id}}'] || '#007bff', 
                borderColor: profissionalColors['{{this.admin.id}}'] || '#007bff',
                textColor: '#fff',
                extendedProps: {
                    horarioInicio: '{{this.horarioInicio}}',
                    horarioFim: '{{this.horarioFim}}'
                }
            },
            {{/each}}
        ];

        // Formatar os horários antes de exibir
        events.forEach(event => {
            let startTime = new Date(event.start).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
            let endTime = new Date(event.end).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
            event.title = `${event.title.split(' - ')[0]} - ${startTime} até ${endTime}`;
        });

        const calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth', // Exibe o calendário no formato mensal
            locale: 'pt-br',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            events: events,
            eventClick: function(info) {
                let startTime = info.event.start.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
                let endTime = info.event.end ? info.event.end.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }) : 'Sem horário final';

                Swal.fire({
                    title: info.event.title.split(" - ")[0], // Apenas o nome do profissional
                    html: `<b>Início:</b> ${startTime}<br><b>Fim:</b> ${endTime}`,
                    icon: 'info',
                    confirmButtonText: 'Ok'
                });
            }
        });

        calendar.render();

        toggleCalendarBtn.addEventListener('click', function () {
            if (calendarEl.style.display === "none") {
                calendarEl.style.display = "block";
                calendar.updateSize(); // Atualiza o tamanho do calendário calendar.render(); // Renderiza novamente o calendário
            } else {
                calendarEl.style.display = "none";
            }
        });
    });
</script>

</body>
</html>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        {{#if error_msg}}
            Swal.fire({
                icon: 'error',
                title: 'Erro',
                text: '{{error_msg}}',
                confirmButtonText: 'Ok'
            });
        {{/if}}
        
        {{#if success_msg}}
            Swal.fire({
                icon: 'success',
                title: 'Sucesso',
                text: '{{success_msg}}',
                confirmButtonText: 'Ok'
            });
        {{/if}}
    });
</script>