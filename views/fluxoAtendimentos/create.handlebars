<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
</head>
<body>

  <div class="container my-5">
    <form action="/fluxoAtendimentos" method="POST" class="p-4 bg-light rounded shadow-sm">
      {{#if success_msg}}
        <script>
          document.addEventListener('DOMContentLoaded', () => {
            Swal.fire({
              icon: 'success',
              title: 'Sucesso',
              text: '{{success_msg}}',
              confirmButtonText: 'Ok'
            });
          });
        </script>
      {{/if}}

      {{#if error_msg}}
        <script>
          document.addEventListener('DOMContentLoaded', () => {
            Swal.fire({
              icon: 'error',
              title: 'Erro',
              text: '{{error_msg}}',
              confirmButtonText: 'Ok'
            });
          });
        </script>
      {{/if}}

      <h1 class="text-center my-4 text-primary">Criar Novo Encaminhamento</h1>

      <div class="mb-4">
        <label for="nomePaciente" class="form-label">Nome do Servidor:</label>
        <select name="nomePaciente" id="nomePaciente" class="form-select select2" required>
          <option value="">üîç Digite para buscar um servidor</option>
          {{#each pacientes}}
            <option value="{{this.nome}}" data-matricula="{{this.matricula}}" data-telefone="{{this.telefone}}">{{this.nome}}</option>
          {{/each}}
        </select>
      </div>

      <div class="mb-4">
        <label for="matriculaPaciente" class="form-label">Matr√≠cula do Servidor:</label>
        <input type="text" name="matriculaPaciente" id="matriculaPaciente" class="form-control">
      </div>

      <div class="mb-4">
        <label for="numeroProcesso" class="form-label">N√∫mero do Processo:</label>
        <input type="text" name="numeroProcesso" id="numeroProcesso" class="form-control" title="O n√∫mero do processo deve estar no formato 000000/0000">
        <div class="invalid-feedback">O n√∫mero do processo deve estar no formato 000000/0000.</div>
      </div>

      <div class="mb-4">
        <label for="telefonePaciente" class="form-label">Telefone do Servidor:</label>
        <input type="text" name="telefonePaciente" id="telefonePaciente" class="form-control" placeholder="(99) 99999-9999">
        <div class="invalid-feedback">Informe um telefone v√°lido no formato (XX) XXXXX-XXXX.</div>
      </div>

      <div class="mb-4">
        <label for="assuntoAcolhimento" class="form-label">Assunto do atendimento:</label>
        <input type="text" name="assuntoAcolhimento" id="assuntoAcolhimento" class="form-control" required>
      </div>

      <div class="mb-4">
        <label for="descricao" class="form-label">Descri√ß√£o:</label>
        <textarea name="descricao" id="descricao" class="form-control" rows="4"></textarea>
      </div>

      <div class="mb-4" style="display: none;">
        <label for="profissionalIdEnvio" class="form-label">Profissional de Envio:</label>
        <input type="hidden" name="profissionalIdEnvio" id="profissionalIdEnvio" value="{{profissionalIdEnvio}}">
      </div>

      <div class="mb-4">
        <label for="profissionalIdRecebido" class="form-label">Profissional de Recebimento:</label>
        <select name="profissionalIdRecebido" id="profissionalIdRecebido" class="form-control" required>
          <option value="">Selecione um profissional</option>
          <!-- Lista de profissionais ser√° preenchida pelo JavaScript -->
        </select>
      </div>

      <div class="text-center mt-4">
        <button type="submit" class="btn btn-success btn-lg">
          <i class="bi bi-check-circle"></i> Criar Encaminhamento
        </button>
      </div>
    </form>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Inicializa o Select2
      $('#nomePaciente').select2({
        placeholder: "üîç Digite para buscar um servidor",
        allowClear: true,
        tags: true,
        width: '100%'
      });

      // Atualiza a matr√≠cula e telefone ao selecionar um paciente
      $('#nomePaciente').on('change', function () {
        const selectedOption = $(this).find(':selected');
        const matricula = selectedOption.data('matricula');
        const telefone = selectedOption.data('telefone');
        const telefoneFormatado = telefone ? formatarTelefone(String(telefone)) : '';

        $('#matriculaPaciente').val(matricula);
        $('#telefonePaciente').val(telefoneFormatado);
      });

      // Formata o telefone
      function formatarTelefone(numero) {
        if (!numero) return '';
        const digits = String(numero).replace(/\D/g, '');
        if (digits.length === 11) {
          return `(${digits.substring(0, 2)}) ${digits.substring(2, 7)}-${digits.substring(7)}`;
        } else if (digits.length === 10) {
          return `(${digits.substring(0, 2)}) ${digits.substring(2, 6)}-${digits.substring(6)}`;
        }
        return numero;
      }

      // Valida√ß√£o do n√∫mero do processo
      document.getElementById('numeroProcesso').addEventListener('input', function (event) {
        const input = event.target;
        let value = input.value.replace(/\D/g, '');
        if (value.length > 6) {
          value = value.slice(0, 6) + '/' + value.slice(6, 10);
        }
        input.value = value;

        if (value === "") {
          input.setCustomValidity("");
          input.classList.remove("is-invalid");
          return;
        }

        if (!/^\d{6}\/\d{4}$/.test(value)) {
          input.setCustomValidity("O n√∫mero do processo deve estar no formato 000000/0000.");
          input.classList.add("is-invalid");
        } else {
          input.setCustomValidity("");
          input.classList.remove("is-invalid");
        }
      });

      // Valida√ß√£o do telefone
      document.getElementById('telefonePaciente').addEventListener('input', function (event) {
        const input = event.target;
        let value = input.value.replace(/\D/g, '');
        if (value === "") {
          input.setCustomValidity("");
          input.classList.remove("is-invalid");
          return;
        }

        if (value.length > 11) {
          value = value.slice(0, 11);
        }
        
        if (value.length > 10) {
          value = value.replace(/^(\d{2})(\d{5})(\d{4})$/, "($1) $2-$3");
        } else if (value.length > 9) {
          value = value.replace(/^(\d{2})(\d{4})(\d{4})$/, "($1) $2-$3");
        }

        input.value = value;

        if (value !== "") {
          const telefoneRegex = /^\(\d{2}\) \d{4,5}-\d{4}$/;
          if (!telefoneRegex.test(value)) {
            input.setCustomValidity("Informe um telefone v√°lido no formato (XX) XXXXX-XXXX.");
            input.classList.add("is-invalid");
          } else {
            input.setCustomValidity("");
            input.classList.remove("is-invalid");
          }
        }
      });

      // Preencher a lista de profissionais
      const profissionalSelect = document.getElementById("profissionalIdRecebido");
      const profissionaisServicoSocial = [
        {{#each profissionaisServicoSocial}}
          { id: "{{this.id}}", nome: "{{this.nome}}" },
        {{/each}}
      ];

      const profissionaisGestorSocial = [
        {{#each profissionaisGestorSocial}}
          { id: "{{this.id}}", nome: "{{this.nome}}" },
        {{/each}}
      ];

      const profissionaisAdm = [
        {{#each profissionaisAdm}}
          { id: "{{this.id}}", nome: "{{this.nome}}" },
        {{/each}}
      ];

      function atualizarListaProfissionais() {
        profissionalSelect.innerHTML = '<option value="">Selecione um profissional</option>';
        const todosProfissionaisFiltrados = [...profissionaisServicoSocial, ...profissionaisGestorSocial, ...profissionaisAdm];

        todosProfissionaisFiltrados.forEach(profissional => {
          const option = document.createElement("option");
          option.value = profissional.id;
          option.textContent = profissional.nome;
          profissionalSelect.appendChild(option);
        });

        const profissionalRecebidoId = "{{encaminhamento.profissionalIdRecebido}}";
        if (profissionalRecebidoId) {
          profissionalSelect.value = profissionalRecebidoId;
        }
      }

      atualizarListaProfissionais();
    });
  </script>

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    .container {
      max-width: 900px;
      margin-top: 40px;
    }
  </style>

</body>
</html>