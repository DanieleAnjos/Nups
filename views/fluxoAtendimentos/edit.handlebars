<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEJ6bH8lX1YdVfK2anGQbhMvDOK0gtyWFM5J0n61V9QhZ8kWnZTna4rbUjxdg" crossorigin="anonymous">
  <!-- Icones do Bootstrap -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body>

  <div class="container my-5">
    <form action="/fluxoAtendimentos/{{fluxoAtendimentos.id}}?_method=PUT" method="POST" class="p-4 bg-light rounded shadow-sm">
      <h1 class="text-center my-4 text-primary">Editar Encaminhamento</h1>

      <!-- Nome do Paciente -->
      <div class="mb-4">
        <label for="nomePaciente" class="form-label">Nome do Servidor:</label>
        <input type="text" name="nomePaciente" id="nomePaciente" class="form-control" value="{{fluxoAtendimentos.nomePaciente}}" required>
      </div>

      <!-- Matrícula do Paciente -->
      <div class="mb-4">
        <label for="matriculaPaciente" class="form-label">Matrícula:</label>
        <input type="text" name="matriculaPaciente" id="matriculaPaciente" class="form-control" value="{{fluxoAtendimentos.matriculaPaciente}}">
      </div>

      <!-- Numero do Processo -->
      <div class="mb-4">
        <label for="numeroProcesso" class="form-label">Número do Processo:</label>
        <input type="text" name="numeroProcesso" id="numeroProcesso" class="form-control" value="{{fluxoAtendimentos.numeroProcesso}}">
      </div>

      <!-- Telefone do Paciente -->
      <div class="mb-4">
        <label for="telefonePaciente" class="form-label">Telefone do Servidor:</label>
        <input type="text" name="telefonePaciente" id="telefonePaciente" class="form-control" value="{{fluxoAtendimentos.telefonePaciente}}">
      </div>

      <!-- Assunto do Acolhimento -->
      <div class="mb-4">
        <label for="assuntoAcolhimento" class="form-label">Assunto do atendimento:</label>
        <input type="text" name="assuntoAcolhimento" id="assuntoAcolhimento" class="form-control" value="{{fluxoAtendimentos.assuntoAcolhimento}}" required>
      </div>

      <!-- Descrição -->
      <div class="mb-4">
        <label for="descricao" class="form-label">Descrição:</label>
        <textarea name="descricao" id="descricao" class="form-control" rows="4">{{fluxoAtendimentos.descricao}}</textarea>
      </div>

      <!-- Profissional de Envio (oculto) -->
      <div class="mb-4" style="display: none;">
        <label for="profissionalIdEnvio" class="form-label">Profissional de Envio:</label>
        <input type="hidden" name="profissionalIdEnvio" id="profissionalIdEnvio" value="{{fluxoAtendimentos.profissionalIdEnvio}}">
      </div>

      <!-- Botão de Envio -->
      <div class="text-center mt-4">
        <button type="submit" class="btn btn-success btn-lg">
          <i class="bi bi-check-circle"></i> Atualizar Encaminhamento
        </button>
      </div>
    </form>
  </div>

  <!-- jQuery e Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.getElementById('numeroProcesso').addEventListener('input', function (event) {
      const input = event.target;
      let value = input.value.replace(/\D/g, ''); // Remove caracteres não numéricos

      // Aplica a formatação se houver pelo menos 7 dígitos (6 antes da barra e 1 depois)
      if (value.length > 6) {
          value = value.slice(0, 6) + '/' + value.slice(6, 10);
      }

      // Atualiza o valor do input
      input.value = value;

      // Se o campo estiver vazio, remove qualquer validação
      if (value === "") {
          input.setCustomValidity(""); // Nenhuma mensagem de erro
          input.classList.remove("is-invalid");
          return;
      }

      // Valida o formato do número do processo
      if (!/^\d{6}\/\d{4}$/.test(value)) {
          input.setCustomValidity("O número do processo deve estar no formato 000000/0000.");
          input.classList.add("is-invalid");
      } else {
          input.setCustomValidity(""); // Limpa a mensagem de erro
          input.classList.remove("is-invalid");
      }
    });

    document.getElementById('telefonePaciente').addEventListener('input', function (event) {
      const input = event.target;
      let value = input.value.replace(/\D/g, ''); // Remove tudo que não for número

      // Aplica a máscara de telefone (formato brasileiro)
      if (value.length > 11) {
          value = value.slice(0, 11);
      }

      if (value.length > 10) {
          value = value.replace(/^(\d{2})(\d{5})(\d{4})$/, "($1) $2-$3"); // Formato celular
      } else if (value.length > 9) {
          value = value.replace(/^(\d{2})(\d{4})(\d{4})$/, "($1) $2-$3"); // Formato fixo
      }

      input.value = value;

      // Validação do número, mas apenas se não estiver vazio
      if (value !== "") {
          const telefoneRegex = /^\(\d{2}\) \d{4,5}-\d{4}$/;
          if (!telefoneRegex.test(value)) {
              input.setCustomValidity("Informe um telefone válido no formato (XX) XXXXX-XXXX.");
              input.classList.add("is-invalid");
          } else {
              input.setCustomValidity("");
              input.classList.remove("is-invalid");
          }
      } else {
          input.setCustomValidity(""); // Limpa a mensagem de erro se o campo estiver vazio
          input.classList.remove("is-invalid");
      }
    });
  </script>

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    .container {
      max-width: 900px;
      margin-top: 40px;
    }
  </style>

</body>
</html>