<!-- √çcones do Bootstrap -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Select2 -->
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<body>

  <div class="container my-5">
    <form action="/encaminhamentos" method="POST" class="p-4 bg-light rounded shadow-sm">
      {{#if success_msg}}
        <script>
          document.addEventListener('DOMContentLoaded', () => {
            Swal.fire({
              icon: 'success',
              title: 'Sucesso',
              text: '{{success_msg}}',
              confirmButtonText: 'Ok'
            });
          });
        </script>
      {{/if}}

      {{#if error_msg}}
        <script>
          document.addEventListener('DOMContentLoaded', () => {
            Swal.fire({
              icon: 'error',
              title: 'Erro',
              text: '{{error_msg}}',
              confirmButtonText: 'Ok'
            });
          });
        </script>
      {{/if}}

      <h2 class="text-center my-4 text-primary">Novo Encaminhamento</h2>

      <!-- Nome do Paciente -->
      <div class="mb-4">
        <label for="nomePaciente" class="form-label">Nome do Servidor:</label>
        <select name="nomePaciente" id="nomePaciente" class="form-select select2" required>
          <option value="">üîç Digite para buscar um servidor</option>
          {{#each pacientes}}
            <option value="{{this.nome}}" data-matricula="{{this.matricula}}">{{this.nome}}</option>
          {{/each}}
        </select>
      </div>

      <!-- Matr√≠cula do Paciente -->
      <div class="mb-4">
        <label for="matriculaPaciente" class="form-label">Matr√≠cula do Servidor:</label>
        <input type="text" name="matriculaPaciente" id="matriculaPaciente" class="form-control" required>
      </div>

      <!-- N√∫mero do Processo -->
      <div class="mb-4">
        <label for="numeroProcesso" class="form-label">N√∫mero do Processo:</label>
        <input type="text" name="numeroProcesso" id="numeroProcesso" class="form-control"
        title="O n√∫mero do processo deve estar no formato 000000/0000">
      </div>

      <!-- Telefone do Paciente -->
      <div class="mb-4">
        <label for="telefonePaciente" class="form-label">Telefone do Servidor:</label>
        <input type="text" name="telefonePaciente" id="telefonePaciente" class="form-control" required placeholder="(99) 99999-9999">
        <div class="invalid-feedback">Informe um telefone v√°lido no formato (XX) XXXXX-XXXX.</div>
      </div>

      <div class="mb-4">
        <label for="assuntoAcolhimento" class="form-label">Assunto do Acolhimento:</label>
        <select class="form-control" name="assuntoAcolhimento" id="assuntoAcolhimento" required>
          <option value="">Selecione um assunto</option>
          <option value="Acolhimento de disparo">Acolhimento de disparo</option>
          <option value="Acolhimento psicossocial">Acolhimento psicossocial</option>
          <option value="Exposi√ß√£o negativa na m√≠dia">Exposi√ß√£o negativa na m√≠dia</option>
        </select>
      </div>

      <!-- Descri√ß√£o -->
      <div class="mb-4">
        <label for="descricao" class="form-label">Descri√ß√£o:</label>
        <textarea name="descricao" id="descricao" class="form-control" rows="4" required></textarea>
      </div>

      <!-- Profissional de Envio (oculto) -->
      <div class="mb-4" style="display: none;">
        <label for="profissionalIdEnvio" class="form-label">Profissional de Envio:</label>
        <input type="hidden" name="profissionalIdEnvio" id="profissionalIdEnvio" value="{{profissionalIdEnvio}}">
      </div>

      <!-- Profissional de Recebimento -->
      <div class="mb-4">
        <label for="profissionalIdRecebido" class="form-label">Profissional de Recebimento:</label>
        <select name="profissionalIdRecebido" id="profissionalIdRecebido" class="form-control" required>
          <option value="">Selecione um profissional</option>
          <!-- Lista de profissionais ser√° preenchida pelo JavaScript -->
        </select>
      </div>

      <!-- Bot√£o de Envio -->
      <div class="text-center mt-4">
        <button type="submit" class="btn btn-success btn-lg">
          <i class="bi bi-check-circle"></i> Gerar Encaminhamento
        </button>
      </div>
    </form>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Inicializa o Select2
      $('#nomePaciente').select2({
        placeholder: "üîç Digite para buscar um servidor", // Texto de placeholder
        allowClear: true, // Permite limpar a sele√ß√£o
        tags: true, // Habilita a inser√ß√£o de valores n√£o cadastrados
        width: '100%' // Define a largura do campo
      });

      // Atualiza a matr√≠cula ao selecionar um paciente
      $('#nomePaciente').on('change', function () {
        const selectedOption = $(this).find(':selected');
        const matricula = selectedOption.data('matricula');
        $('#matriculaPaciente').val(matricula); // Preenche o campo de matr√≠cula
      });

      // Valida√ß√£o e formata√ß√£o do campo 'N√∫mero do Processo'
      document.getElementById('numeroProcesso').addEventListener('input', function (event) {
        const input = event.target;
        let value = input.value.replace(/\D/g, ''); // Remove caracteres n√£o num√©ricos

        if (value.length > 6) {
          value = value.slice(0, 6) + '/' + value.slice(6, 10);
        }

        input.value = value;

        if (value === "") {
          input.setCustomValidity("");
          input.classList.remove("is-invalid");
          return;
        }

        if (!/^\d{6}\/\d{4}$/.test(value)) {
          input.setCustomValidity("O n√∫mero do processo deve estar no formato 000000/0000.");
          input.classList.add("is-invalid");
        } else {
          input.setCustomValidity("");
          input.classList.remove("is-invalid");
        }
      });

      // Valida√ß√£o e formata√ß√£o do campo 'Telefone'
      document.getElementById('telefonePaciente').addEventListener('input', function (event) {
        const input = event.target;
        let value = input.value.replace(/\D/g, ''); // Remove tudo que n√£o for n√∫mero

        if (value.length > 11) {
          value = value.slice(0, 11);
        }

        if (value.length > 10) {
          value = value.replace(/^(\d{2})(\d{5})(\d{4})$/, "($1) $2-$3"); // Formato celular
        } else if (value.length > 9) {
          value = value.replace(/^(\d{2})(\d{4})(\d{4})$/, "($1) $2-$3"); // Formato fixo
        }

        input.value = value;

        const telefoneRegex = /^\(\d{2}\) \d{4,5}-\d{4}$/;
        if (!telefoneRegex.test(value)) {
          input.setCustomValidity("Informe um telefone v√°lido no formato (XX) XXXXX-XXXX.");
          input.classList.add("is-invalid");
        } else {
          input.setCustomValidity("");
          input.classList.remove("is-invalid");
        }
      });

      // Fun√ß√£o para atualizar a lista de profissionais
      const assuntoSelect = document.getElementById("assuntoAcolhimento");
      const profissionalSelect = document.getElementById("profissionalIdRecebido");

      const profissionaisPsicologia = [
        {{#each profissionaisPsicologia}}
          { id: "{{this.id}}", nome: "{{this.nome}}" },
        {{/each}}
      ];

      const profissionaisServicoSocial = [
        {{#each profissionaisServicoSocial}}
          { id: "{{this.id}}", nome: "{{this.nome}}" },
        {{/each}}
      ];

      function atualizarListaProfissionais() {
        const assuntoSelecionado = assuntoSelect.value;
        let profissionais = [];
        if (assuntoSelecionado === "Acolhimento de disparo" || assuntoSelecionado === "Exposi√ß√£o negativa na m√≠dia") {
          profissionais = profissionaisPsicologia;
        } else {
          profissionais = profissionaisServicoSocial;
        }

        profissionalSelect.innerHTML = '<option value="">Selecione um profissional</option>';
        profissionais.forEach(profissional => {
          const option = document.createElement("option");
          option.value = profissional.id;
          option.textContent = profissional.nome;
          profissionalSelect.appendChild(option);
        });
      }

      assuntoSelect.addEventListener("change", atualizarListaProfissionais);
      atualizarListaProfissionais(); // Atualiza na carga inicial
    });
  </script>

</body>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  .container {
    max-width: 900px;
    margin-top: 40px;
  }
</style>
