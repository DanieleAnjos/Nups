<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{title}}</title>
  <style>

    .container {
      max-width: 800px;
      margin: 0 auto;
      background: white;
      padding: 25px;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    h2 {
      text-align: center;
      color: #2c3e50;
      margin-bottom: 25px;
      font-size: 28px;
      font-weight: 600;
    }

    .alert-container {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .alert {
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      display: flex;
      align-items: flex-start;
      gap: 20px;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      background-color: white;
      border-left: 6px solid transparent;
    }

    .alert:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
    }

    .alert-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: rgba(0, 0, 0, 0.1);
    }

    .alert-icon i {
      font-size: 20px;
      color: inherit;
    }

    .alert-content {
      flex-grow: 1;
    }

    .alert-title {
      font-size: 20px;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 10px;
    }

    .registro-box {
      background-color: #f8f9fa;
      border-left: 4px solid #0056b3;
      padding: 15px;
      margin-top: 15px;
      border-radius: 8px;
    }

    .registro-box strong {
      font-size: 16px;
      color: #0056b3;
    }

    .registro-box p {
      font-size: 14px;
      color: #555;
      margin-top: 8px;
    }

    .alert-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 15px;
      font-size: 14px;
      color: #777;
    }

    .alert-footer span {
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .btn-marcar-visto {
      background-color: #28a745;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
      transition: background-color 0.3s ease;
    }

    .btn-marcar-visto:disabled {
      background-color: #6c757d;
      cursor: not-allowed;
    }

    .btn-marcar-visto:hover:not(:disabled) {
      background-color: #218838;
    }

    .btn-ver-visualizacoes {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
      transition: background-color 0.3s ease;
      margin-top: 10px;
    }

    .btn-ver-visualizacoes:hover {
      background-color: #0056b3;
    }

    .visualizacoes-box {
      margin-top: 20px;
      padding: 15px;
      background-color: #f8f9fa;
      border-radius: 8px;
      border: 1px solid #e9ecef;
      display: none; /* Oculta a lista inicialmente */
    }

    .visualizacoes-box.visible {
      display: block; /* Exibe a lista quando a classe "visible" é adicionada */
    }

    .visualizacoes-box h4 {
      font-size: 16px;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 10px;
    }

    .visualizacoes-box ul {
      list-style-type: none;
      padding-left: 0;
    }

    .visualizacoes-box ul li {
      font-size: 14px;
      color: #555;
      margin-bottom: 8px;
      padding: 8px;
      background-color: white;
      border-radius: 6px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    }

    .btn {
      display: block;
      width: fit-content;
      margin: 25px auto 0;
      padding: 10px 25px;
      text-align: center;
      background-color: #0056b3;
      color: white;
      border-radius: 6px;
      text-decoration: none;
      font-weight: 600;
      transition: background-color 0.3s ease;
    }

    .btn:hover {
      background-color: #004494;
    }

    /* Estilos específicos para cada tipo de aviso */
    .alert-lembrete {
      border-left-color: #ffc107;
    }

    .alert-lembrete .alert-icon {
      background-color: rgba(255, 193, 7, 0.1);
    }

    .alert-lembrete i {
      color: #ffc107;
    }

    .alert-alerta {
      border-left-color: #dc3545;
    }

    .alert-alerta .alert-icon {
      background-color: rgba(220, 53, 69, 0.1);
    }

    .alert-alerta i {
      color: #dc3545;
    }

    .alert-administrativo {
      border-left-color: #17a2b8;
    }

    .alert-administrativo .alert-icon {
      background-color: rgba(23, 162, 184, 0.1);
    }

    .alert-administrativo i {
      color: #17a2b8;
    }

    @media (max-width: 600px) {
      .alert {
        flex-direction: column;
        align-items: flex-start;
      }

      .alert-icon {
        margin-bottom: 10px;
      }

      .alert-footer {
        flex-direction: column;
        gap: 10px;
        align-items: flex-start;
      }
    }
  </style>
</head>
<body>

<div class="container">
  <h2>{{title}}</h2>

  {{#if error}}
    <p style="color: red; text-align: center;">{{error}} - {{details}}</p>
  {{/if}}

  <div class="alert-container">
    {{#each avisos}}
      <div class="alert alert-{{tipo}}">
        <div class="alert-icon">
          {{#if (eq tipo "lembrete")}}
            <i class="fas fa-bell"></i>
          {{else if (eq tipo "alerta")}}
            <i class="fas fa-exclamation-triangle"></i>
          {{else if (eq tipo "administrativo")}}
            <i class="fas fa-clipboard-list"></i>
          {{/if}}
        </div>

        <div class="alert-content">
          <strong class="alert-title">{{assunto}}</strong>

          <div class="registro-box">
            <strong>Mensagem:</strong>
            <p>{{mensagem}}</p>
          </div>

          <div class="alert-footer">
            <span><strong>Data:</strong> {{data}}</span>
            <span><strong>Criado por:</strong> {{profissional.nome}}</span>
            <button
              class="btn-marcar-visto {{#if jaVisualizado}}btn-disabled{{/if}}"
              onclick="marcarComoVisto('{{id}}')"
              {{#if jaVisualizado}}disabled{{/if}}
              aria-label="{{#if jaVisualizado}}Aviso já visto{{else}}Marcar aviso como visto{{/if}}"
            >
              {{#if jaVisualizado}}
                <i class="fas fa-check"></i> Visto
              {{else}}
                Marcar como Visto
              {{/if}}
            </button>
          </div>

          <button class="btn-ver-visualizacoes" onclick="toggleVisualizacoes('{{id}}')">
            Ver Visualizações
          </button>

          <div id="visualizacoes-{{id}}" class="visualizacoes-box">
            <h4>Visualizado por:</h4>
            <ul>
              {{#each visualizadoPor}}
                <li>{{nome}} ({{cargo}}) - {{formatDate vistoEm}}</li>
              {{else}}
                <li>Nenhum profissional visualizou este aviso ainda.</li>
              {{/each}}
            </ul>

            <h4>Não visualizado por:</h4>
            <ul>
              {{#each naoVisualizadoPor}}
                <li>{{nome}} ({{cargo}})</li>
              {{else}}
                <li>Todos os profissionais visualizaram este aviso.</li>
              {{/each}}
            </ul>
          </div>
        </div>
      </div>
    {{/each}}
  </div>

  <a href="javascript:void(0);" class="btn" onclick="window.history.back();">Voltar</a>
</div>

<script>
  // Função para marcar o aviso como visto
  async function marcarComoVisto(avisoId) {
    try {
      const response = await fetch(`/avisos/${avisoId}/marcar-visto`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });

      const result = await response.json(); // Converte a resposta para JSON

      if (response.ok) {
        // Exibe uma mensagem de sucesso
        alert(result.message || 'Aviso marcado como visto.');

        // Atualiza o botão e o estado do aviso
        const botao = document.querySelector(`button[onclick="marcarComoVisto('${avisoId}')"]`);
        if (botao) {
          botao.textContent = 'Visto';
          botao.disabled = true;
        }

        // Atualiza a lista de visualizações (se necessário)
        const visualizacoesBox = document.getElementById(`visualizacoes-${avisoId}`);
        if (visualizacoesBox) {
          const ulVisualizacoes = visualizacoesBox.querySelector('ul');
          if (ulVisualizacoes) {
            const novoItem = document.createElement('li');
            novoItem.textContent = 'Você (agora)';
            ulVisualizacoes.appendChild(novoItem);
          }
        }
      } else {
        // Exibe uma mensagem de erro
        alert(result.error || 'Erro ao marcar aviso como visto.');
      }
    } catch (error) {
      console.error('Erro:', error);
      alert('Erro ao marcar aviso como visto. Tente novamente mais tarde.');
    }
  }

  // Função para exibir/ocultar a lista de visualizações
  function toggleVisualizacoes(avisoId) {
    const visualizacoesBox = document.getElementById(`visualizacoes-${avisoId}`);
    if (visualizacoesBox) {
      visualizacoesBox.classList.toggle('visible');
    }
  }
</script>

</body>
</html>